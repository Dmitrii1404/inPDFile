services:
  postgres:
    image: postgres:17.4
    container_name: postgres_db
    env_file:
      - .env-non-dev
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5  
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7.4
    container_name: pdf_redis
    ports:
      - 6379:6379

  mongodb:
    image: mongo:6-jammy
    container_name: mongo_db
    env_file:
      - .env-non-dev
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped
  
  pdf:
    image: pdf_image
    container_name: pdf_app
    build: 
      context: .
    env_file:
      - .env-non-dev
    command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 8000:8000
    depends_on: 
     postgres:
      condition: service_healthy
     redis:
      condition: service_started
     mongodb:
      condition: service_started

  celery:
    container_name: pdf_celery
    build: 
      context: .
    command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO && celery --app=app.tasks.celery:celery flower"
    env_file:
      - .env-non-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started


  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:11.5.2-ubuntu
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:  
  pgdata:
    driver: local
  mongo-data:
    driver: local
  prometheusdata:
    driver: local
  grafanadata:
    driver: local
